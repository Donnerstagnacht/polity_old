/// <reference types="cypress" />
import {Group, User} from '../../support/index';
describe('Tests Group Membership system', () => {
  let user1: User;
  let user2: User;
  let group1: Group

  before(() => {
    cy.fixture('user1').then((user: User) => {
      user1 = user;
    })
    cy.fixture('user2').then((user: User) => {
      user2 = user;
    })
    cy.fixture('group1').then((group: Group) => {
      group1 = group;
    })
  })

  beforeEach(() => {
    cy.viewport(1024, 514)
  })

  it('1. User requests group membership and group admin denies membership', () => {
    cy.visit('')
    cy.login(user2.email, user2.password)
    cy.searchGroup(group1)
    cy.requestGroupMembership()
    cy.logout()
    cy.login(user1.email, user1.password)
    cy.get('#groups-cy').click()
    cy.contains(group1.name).click()
    cy.openManageMembership()
    cy.cancelGroupMembershipRequest(user2)
    cy.logout()
    cy.login(user1.email, user2.password)
    cy.searchGroup(group1)
    cy.contains('Mitgliedschaft anfragen')
    cy.logout()
  })

  it('2. User requests group membership and withdraws it', () => {
    cy.login(user2.email, user2.password)
    cy.searchGroup(group1)
    cy.requestGroupMembership()
    cy.logout()
    cy.login(user1.email, user1.password)
    cy.get('#groups-cy').click()
    cy.contains(group1.name).click()
    cy.openManageMembership()
    cy.filterFirstTab(user2)
    cy.contains(user2.name)
    cy.logout()
    cy.login(user2.email, user2.password)
    cy.searchGroup(group1)
    cy.contains('Anfrage zurÃ¼ckziehen').click()
    cy.wait(4000)
    cy.contains('Mitgliedschaft anfragen')
    cy.logout()
    cy.login(user1.email, user1.password)
    cy.get('#groups-cy').click()
    cy.contains(group1.name).click()
    cy.openManageMembership()
    cy.filterFirstTab(user2)
    cy.contains(user2.name).should('not.exist')
    cy.logout()
  })

  it('3. User requests membership, group admin accepts and members counter are incremented', () => {
    cy.login(user2.email, user2.password)
    cy.get('#Gruppen')
    .invoke('text')
    .then(Number)
    .then((user2GroupsBefore: number) => {
      cy.log(user2GroupsBefore.toString())
      cy.searchGroup(group1)
      cy.requestGroupMembership()
      cy.logout()
      cy.login(user1.email, user1.password)
      cy.get('#groups-cy').click()
      cy.contains(group1.name).click()
      cy.get('#Mitglieder')
      .invoke('text')
      .then(Number)
      .then((group1MemberBefore: number) => {
        cy.log(group1MemberBefore.toString())
        cy.openManageMembership()
        cy.filterFirstTab(user2)
        cy.contains(user2.name)
        cy.get('[data-cy="acceptFromFirstTab"]').click()
        cy.get('[data-cy="filterFirstTab"]').clear()
        cy.contains(user2.name).should('not.exist')
        cy.clickBackButton()
        cy.openGroupAndWaitForGroupData()
        cy.contains('#Mitglieder', (group1MemberBefore + 1).toString())
        cy.logout()
        cy.login(user2.email, user2.password)
        cy.contains('#Gruppen', (user2GroupsBefore + 1).toString())
        cy.searchGroup(group1)
        cy.contains('Austreten')
        cy.logout()
      })
    })
  })

  it('4. User leaves group from group overview and counter are decremented', () => {
    cy.login(user1.email, user1.password)
    cy.get('#groups-cy').click()
    cy.contains(group1.name).click()
    cy.get('#Mitglieder')
    .invoke('text')
    .then(Number)
    .then((group1MemberBefore: number) => {
      cy.log(group1MemberBefore.toString())
      cy.logout()
      cy.login(user2.email, user2.password)
      cy.get('#Gruppen')
      .invoke('text')
      .then(Number)
      .then((user2GroupsBefore: number) => {
        cy.log(user2GroupsBefore.toString())
        cy.searchGroup(group1)
        cy.leaveGroup()
        cy.openProfileLoggedInUserViaMainMenu()
        cy.contains('#Gruppen', (user2GroupsBefore -1).toString())
        cy.logout()
        cy.login(user1.email, user1.password)
        cy.get('#groups-cy').click()
        cy.contains(group1.name).click()
        cy.contains('#Mitglieder', (group1MemberBefore -1).toString())
        cy.openManageMembership()
        cy.contains('Mitglieder').click()
        cy.wait(100)
        cy.filterSecondTab(user2)
        cy.contains(user2.name).should('not.exist')
        cy.logout()
      })
    })
  })

  it('5. User leaves group from manage own group memberhsip tab and counter are decremented', () => {
    cy.login(user2.email, user2.password)
    cy.searchGroup(group1)
    cy.requestGroupMembership()
    cy.logout()
    cy.login(user1.email, user1.password)
    cy.get('#groups-cy').click()
    cy.contains(group1.name).click()
    cy.openManageMembership()
    cy.acceptGroupMembershipRequest(user2)
    cy.logout()
    cy.login(user1.email, user1.password)
    cy.get('#groups-cy').click()
    cy.contains(group1.name).click()
    cy.get('#Mitglieder')
    .invoke('text')
    .then(Number)
    .then((group1MemberBefore: number) => {
      cy.log(group1MemberBefore.toString())
      cy.logout()
      cy.login(user2.email, user2.password)
      cy.get('#Gruppen')
      .invoke('text')
      .then(Number)
      .then((user2GroupsBefore: number) => {
        cy.log(user2GroupsBefore.toString())
        cy.removeMyGroupMembershipFromMyProfile(group1)
        cy.clickBackButton()
        cy.openProfileLoggedInUserViaMainMenu()
        cy.contains('#Gruppen', (user2GroupsBefore -1).toString())
        cy.searchGroup(group1)
        cy.contains('Mitgliedschaft anfragen')
        cy.logout()
        cy.login(user1.email, user2.password)
        cy.get('#groups-cy').click()
        cy.contains(group1.name).click()
        cy.contains('#Mitglieder', (group1MemberBefore -1).toString())
        cy.openManageMembership()
        cy.contains('Mitglieder').click()
        cy.filterSecondTab(user2)
        cy.contains(user2.name).should('not.exist')
        cy.logout()
      })
    })
  })

  it('6. Admin removes user from group and counter are decremented', () => {
  cy.visit('')
  cy.login(user2.email, user2.password)
  cy.searchGroup(group1)
  cy.contains('Mitgliedschaft anfragen')
  cy.requestGroupMembership()
  cy.logout()
  cy.login(user1.email, user1.password)
  cy.get('#groups-cy').click()
  cy.contains(group1.name).click()
  cy.openManageMembership()
  cy.acceptGroupMembershipRequest(user2)
  cy.logout()
    cy.login(user2.email, user2.password)
    cy.get('#Gruppen')
    .invoke('text')
    .then(Number)
    .then((user2GroupsBefore: number) => {
      cy.log(user2GroupsBefore.toString())
      cy.logout()
      cy.login(user1.email, user1.password)
      cy.get('#groups-cy').click()
      cy.contains(group1.name).click()
      cy.get('#Mitglieder')
      .invoke('text')
      .then(Number)
      .then((group1MemberBefore: number) => {
        cy.log(group1MemberBefore.toString())
        cy.openManageMembership()
        cy.removeGroupMembership(user2)
        cy.logout()
        cy.login(user2.email, user2.password)
        cy.contains('#Gruppen', (user2GroupsBefore -1).toString())
        cy.searchGroup(group1)
        cy.contains('Mitgliedschaft anfragen')
        cy.logout()
      })
    })
  })
})
